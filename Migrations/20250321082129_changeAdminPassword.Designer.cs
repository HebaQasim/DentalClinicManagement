// <auto-generated />
using System;
using DentalClinicManagement.InfrastructureLayer.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DentalClinicManagement.Migrations
{
    [DbContext(typeof(DentalClinicDbContext))]
    [Migration("20250321082129_changeAdminPassword")]
    partial class changeAdminPassword
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DentalClinicManagement.DomainLayer.Entities.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce93f771-e6b7-46b8-af59-66251bc1998f"),
                            Email = "hebaalqerem2003@gmail.com",
                            FullName = "Admin Admin",
                            Password = "$2a$12$rnWo0frYDFCHMYdhEfzUf.NaNLMnAp3om7XE8DWLkbJqG.ATIzg8i",
                            PhoneNumber = "1234567890",
                            RoleId = new Guid("de4f6736-fa9a-48b3-b788-fc5506bedf08")
                        });
                });

            modelBuilder.Entity("DentalClinicManagement.DomainLayer.Entities.CustomerService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkingTime")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("CustomerServices", (string)null);
                });

            modelBuilder.Entity("DentalClinicManagement.DomainLayer.Entities.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WorkingTime")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Doctors", (string)null);
                });

            modelBuilder.Entity("DentalClinicManagement.DomainLayer.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("de4f6736-fa9a-48b3-b788-fc5506bedf08"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("2b7e1f1e-8f4c-4f3a-b7d7-3f2e8f5a9e4c"),
                            Name = "Doctor"
                        },
                        new
                        {
                            Id = new Guid("3c2e4d3b-9f5a-4a1d-bb5e-8a2e1f7c9d3f"),
                            Name = "CustomerService"
                        });
                });

            modelBuilder.Entity("DentalClinicManagement.DomainLayer.Entities.Admin", b =>
                {
                    b.HasOne("DentalClinicManagement.DomainLayer.Entities.Role", "Role")
                        .WithOne("Admin")
                        .HasForeignKey("DentalClinicManagement.DomainLayer.Entities.Admin", "RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DentalClinicManagement.DomainLayer.Entities.CustomerService", b =>
                {
                    b.HasOne("DentalClinicManagement.DomainLayer.Entities.Role", "Role")
                        .WithMany("CustomerServices")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DentalClinicManagement.DomainLayer.Entities.Doctor", b =>
                {
                    b.HasOne("DentalClinicManagement.DomainLayer.Entities.Role", "Role")
                        .WithMany("Doctors")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DentalClinicManagement.DomainLayer.Entities.Role", b =>
                {
                    b.Navigation("Admin")
                        .IsRequired();

                    b.Navigation("CustomerServices");

                    b.Navigation("Doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
